{"ast":null,"code":"var _jsxFileName = \"/Users/peter/Desktop/node-react-app/client/src/components/Home/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { MuiThemeProvider, createTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\n//Dev mode\nconst serverURL = \"\"; //enable for dev mode\n\n//Deployment mode instructions\n//const serverURL = \"http://ov-research-4.uwaterloo.ca:PORT\"; //enable for deployed mode; Change PORT to the port number given to you;\n//To find your port number: \n//ssh to ov-research-4.uwaterloo.ca and run the following command: \n//env | grep \"PORT\"\n//copy the number only and paste it in the serverURL in place of PORT, e.g.: const serverURL = \"http://ov-research-4.uwaterloo.ca:3000\";\n\nconst fetch = require(\"node-fetch\");\nconst opacityValue = 0.9;\nconst theme = createTheme({\n  palette: {\n    type: 'dark',\n    background: {\n      default: \"#000000\"\n    },\n    primary: {\n      main: \"#52f1ff\"\n    },\n    secondary: {\n      main: \"#b552f7\"\n    }\n  }\n});\nconst styles = theme => ({\n  root: {\n    body: {\n      backgroundColor: \"#000000\",\n      opacity: opacityValue,\n      overflow: \"hidden\"\n    }\n  },\n  mainMessage: {\n    opacity: opacityValue\n  },\n  mainMessageContainer: {\n    marginTop: \"20vh\",\n    marginLeft: theme.spacing(20),\n    [theme.breakpoints.down('xs')]: {\n      marginLeft: theme.spacing(4)\n    }\n  },\n  paper: {\n    overflow: \"hidden\"\n  },\n  message: {\n    opacity: opacityValue,\n    maxWidth: 250,\n    paddingBottom: theme.spacing(2)\n  }\n});\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.callApiLoadUserSettings = async () => {\n      const url = serverURL + \"/api/loadUserSettings\";\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n          //authorization: `Bearer ${this.state.token}`\n        },\n\n        body: JSON.stringify({\n          userID: this.state.userID\n        })\n      });\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      console.log(\"User settings: \", body);\n      return body;\n    };\n    this.state = {\n      userID: 1,\n      mode: 0\n    };\n  }\n  componentDidMount() {\n    //this.loadUserSettings();\n  }\n  loadUserSettings() {\n    this.callApiLoadUserSettings().then(res => {\n      //console.log(\"loadUserSettings returned: \", res)\n      var parsed = JSON.parse(res.express);\n      console.log(\"loadUserSettings parsed: \", parsed[0].mode);\n      this.setState({\n        mode: parsed[0].mode\n      });\n    });\n  }\n  render() {\n    const {\n      classes\n    } = this.props;\n    const mainMessage = /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      direction: \"column\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      style: {\n        minHeight: '100vh'\n      },\n      className: classes.mainMessageContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      className: classes.mainMessage,\n      align: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, this.state.mode === 0 ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, \"Welcome to MSci245!\") : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, \"Welcome back!\"))));\n    return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, mainMessage)));\n  }\n}\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Home);","map":{"version":3,"names":["React","Component","PropTypes","withStyles","CssBaseline","MuiThemeProvider","createTheme","Grid","Typography","Paper","serverURL","fetch","require","opacityValue","theme","palette","type","background","default","primary","main","secondary","styles","root","body","backgroundColor","opacity","overflow","mainMessage","mainMessageContainer","marginTop","marginLeft","spacing","breakpoints","down","paper","message","maxWidth","paddingBottom","Home","constructor","props","callApiLoadUserSettings","url","response","method","headers","JSON","stringify","userID","state","json","status","Error","console","log","mode","componentDidMount","loadUserSettings","then","res","parsed","parse","express","setState","render","classes","minHeight","propTypes","object","isRequired"],"sources":["/Users/peter/Desktop/node-react-app/client/src/components/Home/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { MuiThemeProvider, createTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\n\n//Dev mode\nconst serverURL = \"\"; //enable for dev mode\n\n//Deployment mode instructions\n//const serverURL = \"http://ov-research-4.uwaterloo.ca:PORT\"; //enable for deployed mode; Change PORT to the port number given to you;\n//To find your port number: \n//ssh to ov-research-4.uwaterloo.ca and run the following command: \n//env | grep \"PORT\"\n//copy the number only and paste it in the serverURL in place of PORT, e.g.: const serverURL = \"http://ov-research-4.uwaterloo.ca:3000\";\n\nconst fetch = require(\"node-fetch\");\n\nconst opacityValue = 0.9;\n\nconst theme = createTheme({\n  palette: {\n    type: 'dark',\n    background: {\n      default: \"#000000\"\n    },\n    primary: {\n      main: \"#52f1ff\",\n    },\n    secondary: {\n      main: \"#b552f7\",\n    },\n  },\n});\n\nconst styles = theme => ({\n  root: {\n    body: {\n      backgroundColor: \"#000000\",\n      opacity: opacityValue,\n      overflow: \"hidden\",\n    },\n  },\n  mainMessage: {\n    opacity: opacityValue,\n  },\n\n  mainMessageContainer: {\n    marginTop: \"20vh\",\n    marginLeft: theme.spacing(20),\n    [theme.breakpoints.down('xs')]: {\n      marginLeft: theme.spacing(4),\n    },\n  },\n  paper: {\n    overflow: \"hidden\",\n  },\n  message: {\n    opacity: opacityValue,\n    maxWidth: 250,\n    paddingBottom: theme.spacing(2),\n  },\n\n});\n\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userID: 1,\n      mode: 0\n    }\n  };\n\n  componentDidMount() {\n    //this.loadUserSettings();\n  }\n\n\n  loadUserSettings() {\n    this.callApiLoadUserSettings()\n      .then(res => {\n        //console.log(\"loadUserSettings returned: \", res)\n        var parsed = JSON.parse(res.express);\n        console.log(\"loadUserSettings parsed: \", parsed[0].mode)\n        this.setState({ mode: parsed[0].mode });\n      });\n  }\n\n  callApiLoadUserSettings = async () => {\n    const url = serverURL + \"/api/loadUserSettings\";\n\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        //authorization: `Bearer ${this.state.token}`\n      },\n      body: JSON.stringify({\n        userID: this.state.userID\n      })\n    });\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    console.log(\"User settings: \", body);\n    return body;\n  }\n\n  render() {\n    const { classes } = this.props;\n\n\n\n    const mainMessage = (\n      <Grid\n        container\n        spacing={0}\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n        style={{ minHeight: '100vh' }}\n        className={classes.mainMessageContainer}\n      >\n        <Grid item>\n\n          <Typography\n            variant={\"h3\"}\n            className={classes.mainMessage}\n            align=\"flex-start\"\n          >\n            {this.state.mode === 0 ? (\n              <React.Fragment>\n                Welcome to MSci245!\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                Welcome back!\n              </React.Fragment>\n            )}\n          </Typography>\n\n        </Grid>\n      </Grid>\n    )\n\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <CssBaseline />\n          <Paper\n            className={classes.paper}\n          >\n            {mainMessage}\n          </Paper>\n\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Home);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAOC,WAAW,MAAM,+BAA+B;AACvD,SAASC,gBAAgB,EAAEC,WAAW,QAAQ,0BAA0B;AACxE,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,KAAK,MAAM,yBAAyB;;AAG3C;AACA,MAAMC,SAAS,GAAG,EAAE,CAAC,CAAC;;AAEtB;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,YAAY,CAAC;AAEnC,MAAMC,YAAY,GAAG,GAAG;AAExB,MAAMC,KAAK,GAAGR,WAAW,CAAC;EACxBS,OAAO,EAAE;IACPC,IAAI,EAAE,MAAM;IACZC,UAAU,EAAE;MACVC,OAAO,EAAE;IACX,CAAC;IACDC,OAAO,EAAE;MACPC,IAAI,EAAE;IACR,CAAC;IACDC,SAAS,EAAE;MACTD,IAAI,EAAE;IACR;EACF;AACF,CAAC,CAAC;AAEF,MAAME,MAAM,GAAGR,KAAK,KAAK;EACvBS,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,eAAe,EAAE,SAAS;MAC1BC,OAAO,EAAEb,YAAY;MACrBc,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,WAAW,EAAE;IACXF,OAAO,EAAEb;EACX,CAAC;EAEDgB,oBAAoB,EAAE;IACpBC,SAAS,EAAE,MAAM;IACjBC,UAAU,EAAEjB,KAAK,CAACkB,OAAO,CAAC,EAAE,CAAC;IAC7B,CAAClB,KAAK,CAACmB,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC,GAAG;MAC9BH,UAAU,EAAEjB,KAAK,CAACkB,OAAO,CAAC,CAAC;IAC7B;EACF,CAAC;EACDG,KAAK,EAAE;IACLR,QAAQ,EAAE;EACZ,CAAC;EACDS,OAAO,EAAE;IACPV,OAAO,EAAEb,YAAY;IACrBwB,QAAQ,EAAE,GAAG;IACbC,aAAa,EAAExB,KAAK,CAACkB,OAAO,CAAC,CAAC;EAChC;AAEF,CAAC,CAAC;AAGF,MAAMO,IAAI,SAAStC,SAAS,CAAC;EAC3BuC,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAsBfC,uBAAuB,GAAG,YAAY;MACpC,MAAMC,GAAG,GAAGjC,SAAS,GAAG,uBAAuB;MAE/C,MAAMkC,QAAQ,GAAG,MAAMjC,KAAK,CAACgC,GAAG,EAAE;QAChCE,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;UAChB;QACF,CAAC;;QACDtB,IAAI,EAAEuB,IAAI,CAACC,SAAS,CAAC;UACnBC,MAAM,EAAE,IAAI,CAACC,KAAK,CAACD;QACrB,CAAC;MACH,CAAC,CAAC;MACF,MAAMzB,IAAI,GAAG,MAAMoB,QAAQ,CAACO,IAAI,EAAE;MAClC,IAAIP,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE,MAAMC,KAAK,CAAC7B,IAAI,CAACY,OAAO,CAAC;MACtDkB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE/B,IAAI,CAAC;MACpC,OAAOA,IAAI;IACb,CAAC;IAtCC,IAAI,CAAC0B,KAAK,GAAG;MACXD,MAAM,EAAE,CAAC;MACTO,IAAI,EAAE;IACR,CAAC;EACH;EAEAC,iBAAiB,GAAG;IAClB;EAAA;EAIFC,gBAAgB,GAAG;IACjB,IAAI,CAAChB,uBAAuB,EAAE,CAC3BiB,IAAI,CAACC,GAAG,IAAI;MACX;MACA,IAAIC,MAAM,GAAGd,IAAI,CAACe,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC;MACpCT,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEM,MAAM,CAAC,CAAC,CAAC,CAACL,IAAI,CAAC;MACxD,IAAI,CAACQ,QAAQ,CAAC;QAAER,IAAI,EAAEK,MAAM,CAAC,CAAC,CAAC,CAACL;MAAK,CAAC,CAAC;IACzC,CAAC,CAAC;EACN;EAqBAS,MAAM,GAAG;IACP,MAAM;MAAEC;IAAQ,CAAC,GAAG,IAAI,CAACzB,KAAK;IAI9B,MAAMb,WAAW,gBACf,oBAAC,IAAI;MACH,SAAS;MACT,OAAO,EAAE,CAAE;MACX,SAAS,EAAC,QAAQ;MAClB,OAAO,EAAC,YAAY;MACpB,UAAU,EAAC,YAAY;MACvB,KAAK,EAAE;QAAEuC,SAAS,EAAE;MAAQ,CAAE;MAC9B,SAAS,EAAED,OAAO,CAACrC,oBAAqB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAExC,oBAAC,IAAI;MAAC,IAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAER,oBAAC,UAAU;MACT,OAAO,EAAE,IAAK;MACd,SAAS,EAAEqC,OAAO,CAACtC,WAAY;MAC/B,KAAK,EAAC,YAAY;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAEjB,IAAI,CAACsB,KAAK,CAACM,IAAI,KAAK,CAAC,gBACpB,oBAAC,KAAK,CAAC,QAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAC,qBAEhB,CAAiB,gBAEjB,oBAAC,KAAK,CAAC,QAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAC,eAEhB,CACD,CACU,CAER,CAEV;IAGD,oBACE,oBAAC,gBAAgB;MAAC,KAAK,EAAE1C,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAC7B;MAAK,SAAS,EAAEoD,OAAO,CAAC3C,IAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAC3B,oBAAC,WAAW;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,eACf,oBAAC,KAAK;MACJ,SAAS,EAAE2C,OAAO,CAAC/B,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAExBP,WAAW,CACN,CAEJ,CACW;EAEvB;AACF;AAEAW,IAAI,CAAC6B,SAAS,GAAG;EACfF,OAAO,EAAEhE,SAAS,CAACmE,MAAM,CAACC;AAC5B,CAAC;AAED,eAAenE,UAAU,CAACmB,MAAM,CAAC,CAACiB,IAAI,CAAC"},"metadata":{},"sourceType":"module"}